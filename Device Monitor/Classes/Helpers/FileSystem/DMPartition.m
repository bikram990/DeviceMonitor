/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

#import "DMPartition.h"
#import "DMPartition+Private.h"

#include <sys/param.h>
#include <sys/ucred.h>
#include <sys/mount.h>

@implementation DMPartition

@synthesize blockSize       = _blockSize;
@synthesize ioSize          = _ioSize;
@synthesize blocks          = _blocks;
@synthesize freeBlocks      = _freeBlocks;
@synthesize availableBlocks = _availableBlocks;
@synthesize fileNodes       = _fileNodes;
@synthesize freeFileNodes   = _freeFileNodes;
@synthesize fileSystemID    = _fileSystemID;
@synthesize ownerID         = _ownerID;
@synthesize type            = _type;
@synthesize flags           = _flags;
@synthesize subType         = _subType;
@synthesize typeName        = _typeName;
@synthesize mountPoint      = _mountPoint;
@synthesize mountedFS       = _mountedFS;

+ ( NSArray * )availablePartitions
{
    NSMutableArray * partitions;
    DMPartition    * partition;
    struct statfs  * mntInfos;
    int              count;
    int              i;
    
    mntInfos   = NULL;
    partitions = [ NSMutableArray arrayWithCapacity: 10 ];
    
    if( ( count = getmntinfo( &mntInfos, MNT_WAIT ) ) )
    {
        for( i = 0; i < count; i++ )
        {
            partition = [ [ DMPartition alloc ] initWithStatFS: mntInfos ];
            
            [ partitions addObject: partition ];
            [ partition release ];
            
            mntInfos++;
        }
    }
    
    return [ NSArray arrayWithArray: partitions ];
}

- ( void )dealloc
{
    [ _typeName     release ];
    [ _mountPoint   release ];
    [ _mountedFS    release ];
    
    [ super dealloc ];
}

@end
