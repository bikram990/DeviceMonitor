/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

#import "DMPartition+Private.h"

@implementation DMPartition( Private )

- ( id )initWithStatFS: ( struct statfs * )infos
{
    ( void )infos;
    
    if( infos == NULL )
    {
        return nil;
    }
    
    if( ( self = ( [ self init ] ) ) )
    {
        _blockSize          = infos->f_bsize;
        _ioSize             = infos->f_iosize;
        _blocks             = infos->f_blocks;
        _freeBlocks         = infos->f_bfree;
        _availableBlocks    = infos->f_bavail;
        _fileNodes          = infos->f_files;
        _freeFileNodes      = infos->f_ffree;
        _fileSystemID       = infos->f_fsid;
        _ownerID            = infos->f_owner;
        _type               = infos->f_type;
        _flags              = infos->f_flags;
        _subType            = infos->f_fssubtype;
        _typeName           = [ [ NSString alloc ] initWithCString: infos->f_fstypename  encoding: NSUTF8StringEncoding ];
        _mountPoint         = [ [ NSString alloc ] initWithCString: infos->f_mntonname   encoding: NSUTF8StringEncoding ];
        _mountedFS          = [ [ NSString alloc ] initWithCString: infos->f_mntfromname encoding: NSUTF8StringEncoding ];
    }
    
    return self;
}

@end
