/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @header      ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

typedef enum
{
    DMFileFlagsArchived         = 0x01,
    DMFileFlagsHidden           = 0x02,
    DMFileFlagsNoDump           = 0x04,
    DMFileFlagsOpaque           = 0x08,
    DMFileFlagsSystemAppendOnly = 0x10,
    DMFileFlagsSystemImmutable  = 0x20,
    DMFileFlagsUserAppendOnly   = 0x40,
    DMFileFlagsUserImmutable    = 0x80
}
DMFileFlags;

@interface DMFile: NSObject
{
@protected
    
    BOOL            _isDirectory;
    BOOL            _isRegularFile;
    BOOL            _isSymbolicLink;
    BOOL            _isSocket;
    BOOL            _isCharacterSpecial;
    BOOL            _isBlockSpecial;
    BOOL            _isUnknown;
    BOOL            _isImmutable;
    BOOL            _isAppendOnly;
    BOOL            _isBusy;
    BOOL            _extensionIsHidden;
    BOOL            _isReadable;
    BOOL            _isWriteable;
    BOOL            _isExecutable;
    BOOL            _isImage;
    BOOL            _isAudio;
    BOOL            _isVideo;
    DMFileFlags     _flags;
    NSUInteger      _size;
    NSUInteger      _referenceCount;
    NSUInteger      _deviceIdentifier;
    NSUInteger      _ownerID;
    NSUInteger      _groupID;
    NSUInteger      _permissions;
    NSUInteger      _octalPermissions;
    NSUInteger      _systemNumber;
    NSUInteger      _systemFileNumber;
    NSUInteger      _HFSCreatorCode;
    NSUInteger      _HFSTypeCode;
    NSUInteger      _numberOfSubFiles;
    NSString      * _path;
    NSString      * _filename;
    NSString      * _displayName;
    NSString      * _fileExtension;
    NSString      * _parentDirectoryPath;
    NSString      * _type;
    NSString      * _humanReadableSize;
    NSString      * _owner;
    NSString      * _group;
    NSString      * _humanReadablePermissions;
    NSDate        * _creationDate;
    NSDate        * _modificationDate;
    UIImage       * _icon;
    NSDictionary  * _attributes;
    NSFileManager * _fileManager;
    DMFile        * _targetFile;
    
@private
    
    id __DMFile_Reserved[ 5 ] __attribute__( ( unused ) );
}

@property( atomic, readonly ) BOOL          isDirectory;
@property( atomic, readonly ) BOOL          isRegularFile;
@property( atomic, readonly ) BOOL          isSymbolicLink;
@property( atomic, readonly ) BOOL          isSocket;
@property( atomic, readonly ) BOOL          isCharacterSpecial;
@property( atomic, readonly ) BOOL          isBlockSpecial;
@property( atomic, readonly ) BOOL          isUnknown;
@property( atomic, readonly ) BOOL          isImmutable;
@property( atomic, readonly ) BOOL          isAppendOnly;
@property( atomic, readonly ) BOOL          isBusy;
@property( atomic, readonly ) BOOL          extensionIsHidden;
@property( atomic, readonly ) BOOL          isReadable;
@property( atomic, readonly ) BOOL          isWriteable;
@property( atomic, readonly ) BOOL          isExecutable;
@property( atomic, readonly ) BOOL          isImage;
@property( atomic, readonly ) BOOL          isAudio;
@property( atomic, readonly ) BOOL          isVideo;
@property( atomic, readonly ) DMFileFlags   flags;
@property( atomic, readonly ) NSUInteger    size;
@property( atomic, readonly ) NSUInteger    referenceCount;
@property( atomic, readonly ) NSUInteger    deviceIdentifier;
@property( atomic, readonly ) NSUInteger    ownerID;
@property( atomic, readonly ) NSUInteger    groupID;
@property( atomic, readonly ) NSUInteger    permissions;
@property( atomic, readonly ) NSUInteger    octalPermissions;
@property( atomic, readonly ) NSUInteger    systemNumber;
@property( atomic, readonly ) NSUInteger    systemFileNumber;
@property( atomic, readonly ) NSUInteger    HFSCreatorCode;
@property( atomic, readonly ) NSUInteger    HFSTypeCode;
@property( atomic, readonly ) NSUInteger    numberOfSubFiles;
@property( atomic, readonly ) NSString    * path;
@property( atomic, readonly ) NSString    * filename;
@property( atomic, readonly ) NSString    * displayName;
@property( atomic, readonly ) NSString    * fileExtension;
@property( atomic, readonly ) NSString    * parentDirectoryPath;
@property( atomic, readonly ) NSString    * type;
@property( atomic, readonly ) NSString    * owner;
@property( atomic, readonly ) NSString    * group;
@property( atomic, readonly ) NSString    * humanReadableSize;
@property( atomic, readonly ) NSString    * humanReadablePermissions;
@property( atomic, readonly ) NSDate      * creationDate;
@property( atomic, readonly ) NSDate      * modificationDate;
@property( atomic, readonly ) UIImage     * icon;
@property( atomic, readonly ) DMFile      * targetFile;

+ ( DMFile * )fileWithPath: ( NSString * )filePath;
- ( id )initWithPath: ( NSString * )filePath;

@end
