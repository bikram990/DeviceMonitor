/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

#import "DMApplicationDelegate.h"
#import "DMMasterViewController.h"
#import "DMDeviceInfosViewController.h"

@implementation DMApplicationDelegate

@synthesize window                  = _window;
@synthesize navigationController    = _navigationController;
@synthesize splitViewController     = _splitViewController;

- ( void )dealloc
{
    [ _window               release ];
    [ _navigationController release ];
    [ _splitViewController  release ];
    
    [ super dealloc];
}

- ( BOOL )application: ( UIApplication * )application didFinishLaunchingWithOptions: ( NSDictionary * )launchOptions
{
    DMMasterViewController      * masterViewController;
    UINavigationController      * masterNavigationController;
    DMDeviceInfosViewController * detailViewController;
    UINavigationController      * detailNavigationController;
    
    ( void )application;
    ( void )launchOptions;
    
    _window = [ [ UIWindow alloc ] initWithFrame: [ [ UIScreen mainScreen ] bounds ] ];
    
    if( [ [ UIDevice currentDevice ] userInterfaceIdiom ] == UIUserInterfaceIdiomPhone )
    {
        masterViewController            = [ [ DMMasterViewController new ] autorelease ];
        self.navigationController       = [ [ [ UINavigationController alloc ] initWithRootViewController:masterViewController] autorelease];
        self.window.rootViewController  = self.navigationController;
    }
    else
    {
        masterViewController        = [ [ DMMasterViewController new ] autorelease ];
        masterNavigationController  = [ [ [ UINavigationController alloc ] initWithRootViewController: masterViewController ] autorelease ];
        
        detailViewController        = [ [ DMDeviceInfosViewController new ] autorelease ];
        detailNavigationController  = [ [ [ UINavigationController alloc ] initWithRootViewController: detailViewController ] autorelease ];
    	
        self.splitViewController                    = [ [ UISplitViewController new ] autorelease ];
        self.splitViewController.delegate           = detailViewController;
        self.splitViewController.viewControllers    = [ NSArray arrayWithObjects: masterNavigationController, detailNavigationController, nil ];
        
        self.window.rootViewController = self.splitViewController;
    }
    
    [ self.window makeKeyAndVisible ];
    
    return YES;
}

- ( void )applicationWillResignActive: ( UIApplication * )application
{
    ( void )application;
}

- ( void )applicationDidEnterBackground: ( UIApplication * )application
{
    ( void )application;
}

- ( void )applicationWillEnterForeground: ( UIApplication * )application
{
    ( void )application;
}

- ( void )applicationDidBecomeActive: ( UIApplication * )application
{
    ( void )application;
}

- ( void )applicationWillTerminate: ( UIApplication * )application
{
    ( void )application;
}

@end
