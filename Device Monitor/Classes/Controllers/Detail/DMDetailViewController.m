/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

#import "DMDetailViewController.h"
#import "DMDetailViewController+Private.h"
#import "DMDetailViewController+UITableViewDelegate.h"
#import "DMDetailViewController+UITableViewDataSource.h"

@implementation DMDetailViewController

@synthesize masterPopoverController = _masterPopoverController;

- ( id )init
{
    if( [ self class ] == [ DMDetailViewController class ] )
    {
        @throw [ NSException exceptionWithName: NSInternalInconsistencyException reason: @"DMDetailViewController is intended to be used as an abstract class." userInfo: nil ];
    }
    
    return [ super init ];
}

- ( id )initWithNibName: ( NSString * )nibNameOrNil bundle: ( NSBundle * )nibBundleOrNil
{
    if( [ self class ] == [ DMDetailViewController class ] )
    {
        @throw [ NSException exceptionWithName: NSInternalInconsistencyException reason: @"DMDetailViewController is intended to be used as an abstract class." userInfo: nil ];
    }
    
    return [ super initWithNibName: nibNameOrNil bundle: nibBundleOrNil ];
}

- ( id )initWithCoder: ( NSCoder * )coder
{
    if( [ self class ] == [ DMDetailViewController class ] )
    {
        @throw [ NSException exceptionWithName: NSInternalInconsistencyException reason: @"DMDetailViewController is intended to be used as an abstract class." userInfo: nil ];
    }
    
    return [ super initWithCoder: coder ];
}

- ( void )dealloc
{
    [ _masterPopoverController release ];
    
    [ super dealloc ];
}

- ( void )viewDidUnload
{
    [ _masterPopoverController release ];
    
    [ super viewDidUnload ];
}

- ( void )viewDidLoad
{
    [ super viewDidLoad ];
    
    _tableView            = ( UITableView * )( self.view );
    _tableView.dataSource = self;
    _tableView.delegate   = self;
}

- ( BOOL )shouldAutorotateToInterfaceOrientation: ( UIInterfaceOrientation )orientation
{
    ( void )orientation;
    
    return YES;
}

- ( void )splitViewController: ( UISplitViewController * )splitController willHideViewController: ( UIViewController * )viewController withBarButtonItem: ( UIBarButtonItem * )barButtonItem forPopoverController: ( UIPopoverController * )popoverController
{
    ( void )splitController;
    ( void )viewController;
    
    barButtonItem.title = NSLocalizedString( @"MainMenu", @"MainMenu" );
    
    [ self.navigationItem setLeftBarButtonItem: barButtonItem animated: YES ];
    [ _masterPopoverController release ];
    
    _masterPopoverController = [ popoverController retain ];
}

- ( void )splitViewController: ( UISplitViewController * )splitController willShowViewController: ( UIViewController * )viewController invalidatingBarButtonItem: ( UIBarButtonItem * )barButtonItem
{
    ( void )splitController;
    ( void )viewController;
    ( void )barButtonItem;
    
    [ self.navigationItem setLeftBarButtonItem: nil animated: YES ];
    [ _masterPopoverController release ];
    
    _masterPopoverController = nil;
}

@end
