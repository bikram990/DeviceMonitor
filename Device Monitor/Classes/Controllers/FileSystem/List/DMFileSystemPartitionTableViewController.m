/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @file        ...
 * @copyright   (c) 2012 - Jean-David Gadina - www.xs-labs.com
 * @abstract    ...
 */

#import "DMFileSystemPartitionTableViewController.h"
#import "DMFileSystemPartitionTableViewController+Private.h"
#import "DMFileSystemPartitionTableViewController+UITableViewDelegate.h"
#import "DMFileSystemPartitionTableViewController+UITableViewDataSource.h"
#import "DMPartition.h"
#import "DMPreferences.h"
#import "DMFileSystemFileListTableViewController.h"
#import "DMFile.h"

@implementation DMFileSystemPartitionTableViewController

- ( id )init
{
    if( ( self = [ self initWithNibName: @"DMFileSystemPartitionTableView" bundle: nil ] ) )
    {}
    
    return self;
}

- ( void )dealloc
{
    [ _partitions release ];
    
    [ super dealloc ];
}

- ( void )viewDidUnload
{
    [ _partitions release ];
    
    [ super viewDidUnload ];
}

- ( void )viewDidLoad
{
    [ super viewDidLoad ];
    
    self.navigationItem.title   = [ [ UIDevice currentDevice ] name ];
    _partitions                 = [ [ DMPartition availablePartitions ] retain ];
    
    [ self.navigationController setToolbarHidden: NO ];
    
    self.navigationItem.title = NSLocalizedString( @"MainMenu-FileSystem", @"MainMenu-FileSystem" );
}

- ( void )viewWillAppear: ( BOOL )animated
{
    NSString         * disk;
    DMPartition      * partition;
    UIViewController * controller;
    
    [ super viewWillAppear: animated ];
    
    if( animated == NO )
    {
        disk = [ [ DMPreferences sharedInstance ] activeDisk ];
        
        if( disk.length > 0 )
        {
            for( partition in _partitions )
            {
                if( [ partition.mountedFS isEqualToString: disk ] )
                {
                    controller = [ [ DMFileSystemFileListTableViewController alloc ] initWithFile: [ DMFile fileWithPath: partition.mountPoint ] ];
                    
                    if( controller != nil )
                    {
                        [ self.navigationController pushViewController: controller animated: NO ];
                    }
                    
                    [ controller release ];
                }
            }
        }
    }
    else
    {
        [ [ DMPreferences sharedInstance ] setActiveDisk: @"" ];
        [ [ DMPreferences sharedInstance ] setActivePath: @"" ];
    }
}

- ( void )viewDidAppear: ( BOOL )animated
{
    UILabel         * label;
    NSString        * deviceInfos;
    UIBarButtonItem * item;
    UIBarButtonItem * spacer;
    
    [ super viewDidAppear: animated ];
    
    spacer = [ [ UIBarButtonItem alloc ] initWithBarButtonSystemItem: UIBarButtonSystemItemFlexibleSpace target: nil action: NULL ];
    
    label                   = [ [ UILabel alloc ] initWithFrame: CGRectMake( 0, 0, self.navigationController.toolbar.bounds.size.width - 50, self.navigationController.toolbar.bounds.size.height ) ];
    label.backgroundColor   = [ UIColor clearColor ];
    label.textColor         = [ UIColor whiteColor ];
    label.font              = [ UIFont systemFontOfSize: [ UIFont smallSystemFontSize ] ];
    label.textAlignment     = UITextAlignmentCenter;
    label.autoresizingMask  = UIViewAutoresizingFlexibleWidth
                            | UIViewAutoresizingFlexibleHeight
                            | UIViewAutoresizingFlexibleLeftMargin
                            | UIViewAutoresizingFlexibleTopMargin
                            | UIViewAutoresizingFlexibleRightMargin
                            | UIViewAutoresizingFlexibleBottomMargin;
    
    if( [ [ UIDevice currentDevice ] userInterfaceIdiom ] == UIUserInterfaceIdiomPad )
    {
        label.textColor = [ UIColor colorWithRed: ( CGFloat )0.44 green: ( CGFloat )0.47 blue: ( CGFloat )0.5 alpha: ( CGFloat )1 ];
    }
    
    deviceInfos = [ NSString stringWithFormat: @"%@ - %@ %@", [ [ UIDevice currentDevice ] localizedModel ], [ [ UIDevice currentDevice ] systemName ], [ [ UIDevice currentDevice ] systemVersion ] ];
    
    [ label setText: deviceInfos ];
    
    item                                    = [ [ UIBarButtonItem alloc ] initWithCustomView: label ];
    self.navigationController.toolbar.items = [ NSArray arrayWithObjects: spacer, item, spacer, nil ];
    
    [ spacer release ];
    [ item   release ];
    [ label  release ];
}

- ( BOOL )shouldAutorotateToInterfaceOrientation: ( UIInterfaceOrientation )orientation
{
    ( void )orientation;
    
    return YES;
}

@end
